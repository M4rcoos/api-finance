generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Owner {
    id                Int           @id @default(autoincrement())
    establishmentName String
    email             String        @unique
    password          String
    phone             String
    createdAt         DateTime      @default(now()) @map("created_at")
    updatedAt         DateTime      @updatedAt @map("updated_at")
    services          Service[]
    transactions      Transaction[]
    expenses          Expense[]

    @@map("owners")
}

model Service {
    id           Int           @id @default(autoincrement())
    description  String
    value        Float
    status       Boolean       @default(true)
    ownerId      Int           @map("owner_id")
    createdAt    DateTime      @default(now()) @map("created_at")
    updatedAt    DateTime      @updatedAt @map("updated_at")
    owner        Owner         @relation(fields: [ownerId], references: [id])
    transactions Transaction[]

    @@map("services")
}

model Client {
    id           Int           @id @default(autoincrement())
    name         String
    createdAt    DateTime      @default(now()) @map("created_at")
    updatedAt    DateTime      @updatedAt @map("updated_at")
    transactions Transaction[]

    @@map("clients")
}

model Transaction {
    id            Int      @id @default(autoincrement())
    totalValue    Float    @map("total_value")
    paymentMethod String   @map("payment_method")
    date          DateTime @default(now())
    clientId      Int      @map("client_id")
    serviceId     Int      @map("service_id")
    ownerId       Int      @map("owner_id")
    createdAt     DateTime @default(now()) @map("created_at")
    updatedAt     DateTime @updatedAt @map("updated_at")
    client        Client   @relation(fields: [clientId], references: [id])
    service       Service  @relation(fields: [serviceId], references: [id])
    owner         Owner    @relation(fields: [ownerId], references: [id])

    @@map("transactions")
}

model Expense {
    id          Int      @id @default(autoincrement())
    description String
    value       Float
    date        DateTime @default(now())
    ownerId     Int      @map("owner_id")
    createdAt   DateTime @default(now()) @map("created_at")
    updatedAt   DateTime @updatedAt @map("updated_at")
    owner       Owner    @relation(fields: [ownerId], references: [id])

    @@map("expenses")
}
